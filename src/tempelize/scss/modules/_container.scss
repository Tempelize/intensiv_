//CONTAINERS
//------------------------------------------------------------------------------
// CLASS DISPONIBLES
// .xs => détermine la dimension du container d'après la taille de l'écran ($screen-sizes voir _init.scss)
// .s
// .m
// .l
// .xl
// .box-border-0 à 10 =>  box dans son container avec bordure de 0px à 10px et padding

// .box-stretch-width-0 à 100 (%) => étendue en % de la largeur de la boite dans son container
// .box-stretch-height-0 à 100 (%) => étendue en % de la hauteur de la boite dans son container (la hauteur de son container doit être fixée)

// .box-width-1 à 700px => largeur d'une boite en pixel (rajouté .box-border pour avoir bordure et padding)
// .box-height-1 à 700px => hauteur de la boite en pixel (rajouté .box-border pour avoir bordure et padding)

// .flex => display: flex et justify content : center par défaut
// .flex-center => justify-content: center
// .flex-start => justify-content : start;
// .flex-between => justify-content : space-between;
// .flex-wrap => flex-wrap: wrap;
// .align-center => align-items: center;

// .pre => <pre>
//-------------------------------------------------------------------------------
// VARIABLES
$box-width-default: 100%;
$box-border-color: $color-neutral-2;
$box-border-type: solid;
$box-border-radius: 0px; //$border-radius-default;
$box-padding: 1rem;

$pre-border-background: $color-neutral-1;
$pre-border-color: $color-text;
$pre-border: 1px solid;

$flex-margin-default: 0.2rem;
//-------------------------------------------------------------------------------
// MODULE SPECIFICATIONS
@use "sass:map";

// $screen-sizes: (("-xs", 0, auto), ("-s", 576px, 540px), ("-m", 768px, 720px), ("-l", 992px, 960px), ("-xl", 1200px, 1140px), ("-xxl", 1400px, 1320px));

// @each $label, $breakpoint, $containerWidth in $screen-sizes {
// 	@media screen and (min-width:#{$breakpoint}) {
// 		.container {
// 			width: #{$containerWidth};
// 			margin: 0 auto;
// 			padding: 0 1rem;
// 		}
// 	}
// }

// screen-sizes = tableau contenant une variable et un tableau (map)
// $label = (xs,s,m,l,xl)
// $values = ("breakpoint","container-size")
@each $label, $values in $screen-sizes {
	//Tous les écrans à partir de (min-width)
	@media screen and (min-width: map-get($values, "breakpoint")) {
		.container {
			width: 100%;
			max-width: map-get($values, "container-size");
			margin: 0 auto;
			padding: 0 1rem;
		}
	}
}

// $screen-sizes: (
// 	"xs": (
// 		"breakpoint": 0,
// 		"container-size": 100%,
// 	),
// 	"s": (
// 		"breakpoint": 576px,
// 		"container-size": 540px,
// 	),
// 	"m": (
// 		"breakpoint": 768px,
// 		"container-size": 720px,
// 	),
// 	"l": (
// 		"breakpoint": 992px,
// 		"container-size": 960px,
// 	),
// 	"xl": (
// 		"breakpoint": 1200px,
// 		"container-size": 1140px,
// 	),
// );

@for $var from 0 through 10 {
	.box-border-#{$var} {
		width: $box-width-default;
		border: $box-border-type #{$var}px;
		border-color: $box-border-color;
		border-radius: $box-border-radius;
		padding: $box-padding;
	}
}
.border-color-hot {
	border-color: $color-hot;
}
.border-color-2 {
	border-color: $color-2;
}
.border-color-1 {
	border-color: $color-1;
}
.border-color-text {
	border-color: $color-text;
}
.border-color-neutral-1 {
	border-color: $color-neutral-1;
}
.border-color-neutral-2 {
	border-color: $color-neutral-2;
}

// A SUPPRIMER
// $pourcent: "%";
// @for $var from 0 through 100 {
// 	.box-stretch-width-#{$var} {
// 		width: #{$var}#{$pourcent};
// 	}
// 	.box-stretch-height-#{$var} {
// 		height: #{$var}#{$pourcent};
// 	}
// }
@for $var from 1 through 700 {
	.box-width-#{$var} {
		width: #{$var}px;
	}
	.box-height-#{$var} {
		height: #{$var}px;
	}
}

.flex {
	display: flex;

	&.flex-center {
		justify-content: center;
	}
	&.flex-start {
		justify-content: flex-start;
	}
	&.flex-between {
		justify-content: space-between;
	}
	&.flex-wrap {
		flex-wrap: wrap;
	}
	&.align-center {
		align-items: center;
	}
	div {
		margin: $flex-margin-default;
	}
}

pre,
.pre {
	background-color: $pre-border-background;
	border: $pre-border;
	border-color: $pre-border-color;
}
